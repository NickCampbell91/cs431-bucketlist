{
    "openapi": "3.0.0",
    "info": {
        "title": "Bucket List",
        "description": "List the things you want to do before kicking the bucket.\n",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "cam12044@byui.edu"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "cs341-bucketlist-app.herokuapp.com/",
    "basePath": "/",
    "schemes": ["https"],
    "tags": [{
            "name": "bucket",
            "description": "Bucket list"
        },
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/bucket": {
            "get": {
                "tags": [
                    "bucket"
                ],
                "summary": "Get all from bucket list",
                "operationId": "getAll",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bucket"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bucket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Nothing found"
                    }
                }
            },
            "post": {
                "tags": [
                    "bucket"
                ],
                "summary": "Add a new goal to bucket list",
                "operationId": "create",
                "requestBody": {
                    "$ref": "#/components/requestBodies/Bucket"
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "operationId": "loginUser",
                "parameters": [{
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "style": "simple",
                                "explode": false,
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "style": "simple",
                                "explode": false,
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "operationId": "getUserByName",
                "parameters": [{
                    "name": "username",
                    "in": "path",
                    "description": "The name that needs to be fetched. Use user1 for testing.",
                    "required": true,
                    "style": "simple",
                    "explode": false,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "parameters": [{
                    "name": "username",
                    "in": "path",
                    "description": "name that need to be updated",
                    "required": true,
                    "style": "simple",
                    "explode": false,
                    "schema": {
                        "type": "string"
                    }
                }],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [{
                    "name": "username",
                    "in": "path",
                    "description": "The name that needs to be deleted",
                    "required": true,
                    "style": "simple",
                    "explode": false,
                    "schema": {
                        "type": "string"
                    }
                }],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    }
}